window.onload = function() {    var shippingBillingForm = document.getElementById('shippingBillingForm');    var firstNameShipInput = shippingBillingForm.firstNameShip;    var lastNameShipInput = shippingBillingForm.lastNameShip;    var addressShipInput = shippingBillingForm.addressShip;    var cityShipInput = shippingBillingForm.cityShip;    var countryShipInput = shippingBillingForm.countryShip;    var shippingElements = [firstNameShipInput, lastNameShipInput, addressShipInput, cityShipInput, countryShipInput];    var billShipSameCheckbox = shippingBillingForm.billShipSame;    var firstNameBillInput = shippingBillingForm.firstNameBill;    var lastNameBillInput = shippingBillingForm.lastNameBill;    var addressBillInput = shippingBillingForm.addressBill;    var cityBillInput = shippingBillingForm.cityBill;    var countryBillInput = shippingBillingForm.countryBill;    var billingElements = [firstNameBillInput, lastNameBillInput, addressBillInput, cityBillInput, countryBillInput];    //==================================//    //##### CHECKBOX FUNCTIONALITY #####//    //==================================//    billShipSameCheckbox.addEventListener("change", function(event) {        //if billing info same as shipping info box checked, set all information to be the same and lock the billing input fields, otherwise clear the billing info and allow for input        if (billShipSameCheckbox.checked) {            for (var i = 0; i < shippingElements.length; i++) {                if (!shippingElements[i].checkValidity()) {                    billShipSameCheckbox.checked = false;                    alert("Make sure shipping infomation is valid before using as billing information!")                    return;                }            }            firstNameBillInput.value = firstNameShipInput.value;            lastNameBillInput.value = lastNameShipInput.value;            addressBillInput.value = addressShipInput.value;            cityBillInput.value = cityShipInput.value;            countryBillInput.value = countryShipInput.value;            for (var i = 0; i < billingElements.length; i++) {                billingElements[i].setAttribute("readonly", "");            }        } else {            for (var i = 0; i < billingElements.length; i++) {                billingElements[i].value = "";                billingElements[i].removeAttribute("readonly");            }        }    });    //=======================================//    //##### SHIPPING SECTION VALIDATION #####//    //=======================================//    //Check if user's shipping first name is between 2 and 40 characters, set validation message if requirements not met    firstNameShipInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(firstNameShipInput.value, 2) && validator.isLength(firstNameShipInput.value, 40))) {            firstNameShipInput.setCustomValidity("First names should be longer than 2 characters and less than 40 characters!");        } else {            firstNameShipInput.setCustomValidity("");        }    });    // Check if user's shipping last name is between 2 and 40 characters, set validation message if requirements not met    lastNameShipInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(lastNameShipInput.value, 2) && validator.isLength(lastNameShipInput.value, 40))) {            lastNameShipInput.setCustomValidity("Last names should be longer than 2 characters and less than 40 characters!");        } else {            lastNameShipInput.setCustomValidity("");        }    });    // Check if user's shipping address is between 2 and 40 characters, set validation message if requirements not met    addressShipInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(addressShipInput.value, 2) && validator.isLength(addressShipInput.value, 40))) {            addressShipInput.setCustomValidity("Addresses should be longer than 2 characters and less than 40 characters!");        } else {            addressShipInput.setCustomValidity("");        }    });    // Check if user's shipping city is between 2 and 40 characters, set validation message if requirements not met    cityShipInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(cityShipInput.value, 2) && validator.isLength(cityShipInput.value, 40))) {            cityShipInput.setCustomValidity("City names should be longer than 2 characters and less than 40 characters!");        } else {            cityShipInput.setCustomValidity("");        }    });    // Check if user's shipping country is between 2 and 40 characters, set validation message if requirements not met    countryShipInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(countryShipInput.value, 2) && validator.isLength(countryShipInput.value, 40))) {            countryShipInput.setCustomValidity("Country names should be longer than 2 characters and less than 40 characters!");        } else {            countryShipInput.setCustomValidity("");        }    });    //======================================//    //##### BILLING SECTION VALIDATION #####//    //======================================//    //Check if user's billing first name is between 2 and 40 characters, set validation message if requirements not met    firstNameBillInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(firstNameBillInput.value, 2) && validator.isLength(firstNameBillInput.value, 40))) {            firstNameBillInput.setCustomValidity("First names should be longer than 2 characters and less than 40 characters!");        } else {            firstNameBillInput.setCustomValidity("");        }    });    // Check if user's billing last name is between 2 and 40 characters, set validation message if requirements not met    lastNameBillInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(lastNameBillInput.value, 2) && validator.isLength(lastNameBillInput.value, 40))) {            lastNameBillInput.setCustomValidity("Last names should be longer than 2 characters and less than 40 characters!");        } else {            lastNameBillInput.setCustomValidity("");        }    });    // Check if user's billing address is between 2 and 40 characters, set validation message if requirements not met    addressBillInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(addressBillInput.value, 2) && validator.isLength(addressBillInput.value, 40))) {            addressBillInput.setCustomValidity("Addresses should be longer than 2 characters and less than 40 characters!");        } else {            addressBillInput.setCustomValidity("");        }    });    // Check if user's billing city is between 2 and 40 characters, set validation message if requirements not met    cityBillInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(cityBillInput.value, 2) && validator.isLength(cityBillInput.value, 40))) {            cityBillInput.setCustomValidity("City names should be longer than 2 characters and less than 40 characters!");        } else {            cityBillInput.setCustomValidity("");        }    });    // Check if user's billing country is between 2 and 40 characters, set validation message if requirements not met    countryBillInput.addEventListener('keyup', function(event) {        if (!(validator.isOfLength(countryBillInput.value, 2) && validator.isLength(countryBillInput.value, 40))) {            countryBillInput.setCustomValidity("Country names should be longer than 2 characters and less than 40 characters!");        } else {            countryBillInput.setCustomValidity("");        }    });};